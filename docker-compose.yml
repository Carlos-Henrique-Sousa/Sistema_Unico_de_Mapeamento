# Docker Compose Simples para S.U.M

services:
  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: sum_postgres
    environment:
      POSTGRES_DB: sum_db
      POSTGRES_USER: sum_user
      POSTGRES_PASSWORD: sum_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=pt_BR.UTF-8"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - sum_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sum_user -d sum_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend Django
  backend:
    build: ./backend
    container_name: sum_backend
    command: >
      sh -c "cd django-back-end &&
             python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput --clear &&
             python manage.py shell -c \"from core.models import User; User.objects.create_superuser('admin', 'admin@sum.local', 'admin123', user_type='admin')\" || true &&
             gunicorn setup.wsgi:application --bind 0.0.0.0:8000 --workers 2 --threads 2 --timeout 60 --keep-alive 2"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/code
      - static_volume:/code/django-back-end/staticfiles
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://sum_user:sum_password@db:5432/sum_db
      - CORS_ALLOWED_ORIGINS=http://localhost:5173,http://localhost:8080,http://127.0.0.1:5173,http://127.0.0.1:8080,http://localhost:80
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend,nginx
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sum_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Vue.js
  frontend:
    build: ./frontend
    container_name: sum_frontend
    command: npm run dev -- --host 0.0.0.0 --port 5173
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - sum_network
    restart: unless-stopped

  # Nginx (proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: sum_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/www/static
    depends_on:
      - backend
      - frontend
    networks:
      - sum_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local

networks:
  sum_network:
    driver: bridge